# NeMo Agent Toolkit configuration for Milvus MCP Server
# Pure Milvus vector database integration demo

functions:
  # Natural language warehouse query wrapper
  warehouse_query:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "warehouse_query"

  # Milvus MCP Tools
  milvus_list_collections:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_list_collections"

  milvus_get_collection_info:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_get_collection_info"

  milvus_query:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_query"

  milvus_text_search:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_text_search"

  milvus_vector_search:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_vector_search"

  milvus_hybrid_search:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_hybrid_search"

  milvus_load_collection:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_load_collection"

  milvus_release_collection:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_release_collection"

  milvus_insert_data:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_insert_data"

  milvus_create_collection:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_create_collection"

  milvus_delete_entities:
    _type: mcp_tool_wrapper
    url: "http://localhost:9902/sse"
    transport: "sse"
    mcp_tool_name: "milvus_delete_entities"

llms:
  nvidia_llama:
    _type: nim
    model_name: meta/llama-3.1-70b-instruct
    max_tokens: 2000
    temperature: 0.1
    system_prompt: |
      You are an intelligent assistant with access to a Milvus vector database through MCP tools.

      KEY CAPABILITIES:
      1. List Collections - Show all available collections in Milvus
      2. Vector Search - Find similar items using embeddings
      3. Natural Language Queries - Understand and execute warehouse inventory queries

      WAREHOUSE CONTEXT:
      - The main collection is "warehouse_inventory" with product data
      - Fields include: item_name, category, sku, description, unit_price, stock_quantity, supplier, status
      - Use warehouse_query for natural language queries like "show me all electronics"
      - Use milvus tools for direct database operations

      QUERY EXAMPLES:
      - "What databases do we have?" → milvus_list_collections
      - "Show me all electronics" → warehouse_query with natural language
      - "Find items with low stock" → warehouse_query or milvus_query
      - "Get collection schema" → milvus_get_collection_info

      Always provide clear, formatted responses and use the appropriate tool for each task.

workflow:
  _type: react_agent
  tool_names:
    - warehouse_query
    - milvus_list_collections
    - milvus_get_collection_info
    - milvus_query
    - milvus_text_search
    - milvus_vector_search
    - milvus_hybrid_search
    - milvus_load_collection
    - milvus_release_collection
    - milvus_insert_data
    - milvus_create_collection
    - milvus_delete_entities
  llm_name: nvidia_llama
  verbose: true
  parse_agent_response_max_retries: 5
  max_tool_calls: 20